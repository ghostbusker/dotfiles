# ghostbuskers custom ~dotfiles~ ooooh /s
#
# i3 config file (v4)
#

set $mod Mod4

#change the wallpaper every -n seconds
exec watch -n 120 feh --randomize --bg-fill ~/Pictures/Wallpapers/*

#transparancy effect
exec compton -f -b

#fetch a new weather image every 15 minutes and rename it weather.png
exec watch -n 900 wget -O /tmp/weather.png https://s.w-x.co/staticmaps/wu/wxtype/county_loc/csg/animate.png
#for_window [class="mpv"] floating enable

#hoping that moving this closer to top of file makes it work better.
for_window [class="florence"] floating enable

############Invisible background apps###############
#get the clipboard manager and OSK running (and floating!)
exec --no-startup-id tilda
exec --no-startup-id clipit
exec --no-startup-id dhcpcd-gtk
exec --no-startup-id florence --use-config=.config/florence.conf

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus


############# Workspace Setup ##############
#Note: delays are needed to make these apps start in the correct order/location :(
#Setup Workspace 1
exec --no-startup-id i3-msg workspace $ws1
exec xterm -e htop
exec --no-startup-id i3-msg layout splith
exec xterm -e "nmon" 
exec --no-startup-id i3-msg layout splitv
exec xterm -e "cmatrix -ab"
exec --no-startup-id i3-msg layout splith
exec xterm -e "cmatrix -ab -C yellow"

#Setup Workspace 2
exec --no-startup-id i3-msg workspace $ws2
exec xterm -e ranger
exec --no-startup-id i3-msg layout splitv
exec xterm -e "curl wttr.in/30032" 
exec --no-startup-id i3-msg layout splith
exec xterm -e "pipes.sh -p 10 -f 30 -r 20000"
exec --no-startup-id i3-msg layout splitv
exec xterm -e "cmatrix -ab -C magenta"
exec mpv --loop --no-osc --background=0/0/0/0 --framedrop=vo /tmp/weather.png 

#Setup Workspace 3
exec i3-msg workspace $ws3
#exec gif-for-cli --display-mode=truecolor -l 0 "Keyword here!" &
#exec chromium-browser
# Start iceweasel on workspace 3, then switch back to workspace 1
# (Being a command-line utility, i3-msg does not support startup notifications,
#  hence the exec --no-startup-id.)
# (Starting iceweasel with i3’s exec command is important in order to make i3
#  create a startup notification context, without which the iceweasel window(s)
#  cannot be matched onto the workspace on which the command was started.)
# exec --no-startup-id i3-msg 'workspace $ws3; exec chromium-browser; workspace $ws1'

for_window [class="chromium"] move container to workspace 2

#exec --no-startup-id chromium

# Make all urxvts use a 1-pixel border:
#for_window [class="urxvt"] border pixel 1

# A less useful, but rather funny example:
# makes the window floating as soon as I change
# directory to ~/work
#for_window [title="x200: ~/work"] floating enable

#limits all chrome windows to workspace3. not really desired after testing
#assign [class="Chromium"] $ws3

############Mouse#############

focus_follows_mouse no
mouse_warping output

#################App Launch Hotkeys###################

# start a terminal
bindsym $mod+Return exec terminator

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run

#Tilda terminal navtively uses F1 as a hotkey, no need to duplicate here

###################Needed for i3-gaps####################################
#hide_edge_borders both
for_window [class="^.*"] border pixel 2 
gaps inner 15 
gaps outer 15

bindsym $mod+z		gaps outer current plus 5
bindsym $mod+Shift+z	gaps outer current minus 5

####################Fonts #################################
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:ANONYMOUS PRO 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

####################Window Control##########################

default_orientation vertical

# toggle split direction for each new window
for_window [class="^"] split toggle

# toggle tiling / floating
#bindsym $mod+Shift+space floating toggle
bindsym $mod+w floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# kill focused window
bindsym $mod+Shift+q kill
bindsym $mod+F4 kill
bindsym $mod+q kill

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal or vertical orientation
#bindsym $mod+v split vertical
#bindsym $mod+h split horizontal
bindsym $mod+t split toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking toggle
#bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: System"
set $ws2 "2: Term"
set $ws3 "3: Browse"
set $ws4 "4: Edit"
set $ws5 "5: Extra"
set $ws6 "6: Bonus"
set $ws7 "7: More"
set $ws8 "8: Excess"
set $ws9 "9: Nauseum"
set $ws10 "10: Fin"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

bindsym Mod1+Tab workspace next
bindsym Mod1+Shift+Tab workspace prev
bindsym $mod+Tab workspace back_and_forth

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod mode "default"
        bindsym Tab mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"


################### BAR ######################

#psuedo conky bar? sure, why not
exec --no-startup-id conky --config=~/.config/conkybar.conf

# bar toggle, hide or show 
bindsym $mod+b bar mode toggle

##########################################

#We're going dual bars here ppl, better buckle upgrade
#first the  top bar
bar {
        position top
        status_command i3blocks -c ~/.config/i3blocks/config
        tray_output primary
        workspace_buttons no
        #strip_workspace_numbers yes 
        mode hide
        hidden_state hide
        modifier $mod
        colors {
                background #663300
                statusline #000000
        }
}


# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        position bottom
        status_command i3status -c ~/.config/i3status/config
        tray_output primary
        workspace_buttons yes
        strip_workspace_numbers no
        separator_symbol |
        mode dock
        hidden_state show
        modifier $mod
        colors {
                background #006600
                statusline #ffffff
                separator #a0a0a0a0
                focused_workspace  #4c7899 #285577 #ffffff
                active_workspace   #333333 #5f676a #ffffff
                inactive_workspace #333333 #222222 #888888
                urgent_workspace   #2f343a #900000 #ffffff
                binding_mode       #2f343a #900000 #ffffff
        }
}
